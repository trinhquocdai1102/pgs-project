import React, { useState } from 'react';
import { Controller } from 'react-hook-form';
import { Box, Switch, Typography } from '@mui/material';
import { AddProductProps } from './AddProductForm';
import { useStylesSwitch } from '../../../common/components/MakeStylesMUI';
import { metaDesc, OGTags } from '../../utils';
import Multiselect from 'multiselect-react-dropdown';
import { styleSingleSelect } from '../../../common/components/CustomCSSMultiSelect';

const MarketingForm = (props: AddProductProps) => {
  const { control, dataDetail } = props;
  const classes = useStylesSwitch();
  const [subOGTagOpen, setSubOGTagOpen] = useState(false);
  const [metaDescOpen, setMetaDescOpen] = useState(false);

  return (
    <div className="add-form">
      <h4 className="add-parts-title">Marketing</h4>
      <Box className="add-box">
        <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }}>
          Open Graph meta targets
        </Typography>
        <div className="add-item">
          <Controller
            control={control}
            name="og_tags_type"
            defaultValue={'0'}
            render={({ field: { onChange, ...props } }) => (
              <Multiselect
                {...props}
                displayValue="label"
                options={OGTags}
                className="filter-select-product filter-select-stock remove-icon-delete"
                onSelect={(selectedList, selectedItem) => {
                  onChange(selectedItem.type);
                  if (selectedItem.type === '1') {
                    setSubOGTagOpen(true);
                  } else {
                    setSubOGTagOpen(false);
                  }
                }}
                placeholder="Autogenerated"
                style={styleSingleSelect}
                avoidHighlightFirstOption
                singleSelect
              />
            )}
          />
        </div>
      </Box>
      {subOGTagOpen && (
        <Box className="add-box">
          <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }} noWrap></Typography>
          <div className="add-item">
            <Controller
              control={control}
              name="og_tags"
              defaultValue={''}
              render={({ field }) => <textarea {...field} className="add-input" style={{ padding: '0' }} />}
            />
          </div>
        </Box>
      )}
      <Box className="add-box">
        <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }}>
          Meta description
        </Typography>
        <div className="add-item">
          <Controller
            control={control}
            name="meta_desc_type"
            defaultValue={'0'}
            render={({ field: { onChange, ...props } }) => (
              <Multiselect
                {...props}
                displayValue="label"
                options={metaDesc}
                className="filter-select-product filter-select-stock remove-icon-delete"
                onSelect={(selectedList, selectedItem) => {
                  onChange(selectedItem.type);
                  if (selectedItem.type === 'C') {
                    setMetaDescOpen(true);
                  } else {
                    setMetaDescOpen(false);
                  }
                }}
                placeholder="Autogenerated"
                style={styleSingleSelect}
                avoidHighlightFirstOption
                singleSelect
              />
            )}
          />
        </div>
      </Box>
      {metaDescOpen && (
        <Box className="add-box">
          <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }} noWrap></Typography>
          <div className="add-item">
            <Controller
              control={control}
              name="meta_description"
              defaultValue={''}
              render={({ field }) => <textarea {...field} className="add-input" style={{ padding: '0' }} />}
            />
          </div>
        </Box>
      )}
      <Box className="add-box">
        <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }} noWrap>
          Meta keywords
        </Typography>
        <div className="add-item">
          <Controller
            control={control}
            name="meta_keywords"
            defaultValue={''}
            render={({ field }) => <input {...field} type="text" className="add-input" />}
          />
        </div>
      </Box>
      <Box className="add-box">
        <Typography sx={{ fontSize: '16px', color: '#fff', textAlign: 'right', width: '16%' }} noWrap>
          Product page title
        </Typography>
        <div className="add-item">
          <Controller
            control={control}
            name="product_page_title"
            defaultValue={''}
            render={({ field }) => <input {...field} type="text" className="add-input" />}
          />
          <small style={{ fontSize: '12px', color: '#a8a8a8', fontWeight: '400' }}>
            Leave blank to use product name as Page Title.
          </small>
        </div>
      </Box>
      <Box className="add-box">
        <Typography
          sx={{
            fontSize: '16px',
            color: '#fff',
            textAlign: 'right',
            width: '16%',
            overflow: 'visible',
          }}
          noWrap
        >
          <span style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>Add to Facebook product feed</span>
        </Typography>
        <div className="add-item" style={{ display: 'flex', alignItems: 'start', justifyContent: 'left', gap: '12px' }}>
          <Controller
            name="facebook_marketing_enabled"
            control={control}
            defaultValue={dataDetail ? dataDetail.facebook_marketing_enabled : 0}
            render={({ field: { onChange, value } }) => {
              return (
                <>
                  <Switch
                    classes={{
                      root: classes.root,
                      switchBase: classes.switchBase,
                      thumb: classes.thumb,
                      track: classes.track,
                      checked: classes.checked,
                    }}
                    value={value == 1}
                    checked={value == 1}
                    onChange={(e, checked) => {
                      onChange(checked ? 1 : 0);
                    }}
                  />
                </>
              );
            }}
          />
        </div>
      </Box>
      <Box className="add-box">
        <Typography
          sx={{
            fontSize: '16px',
            color: '#fff',
            textAlign: 'right',
            width: '16%',
            overflow: 'visible',
          }}
          noWrap
        >
          <span style={{ whiteSpace: 'pre-wrap', overflowWrap: 'break-word' }}>Add to Google product feed </span>
        </Typography>
        <div className="add-item" style={{ display: 'flex', alignItems: 'start', justifyContent: 'left', gap: '12px' }}>
          <Controller
            name="google_feed_enabled"
            control={control}
            defaultValue={dataDetail ? dataDetail.google_feed_enabled : 0}
            render={({ field: { onChange, value } }) => {
              return (
                <>
                  <Switch
                    classes={{
                      root: classes.root,
                      switchBase: classes.switchBase,
                      thumb: classes.thumb,
                      track: classes.track,
                      checked: classes.checked,
                    }}
                    value={value == 1}
                    checked={value == 1}
                    onChange={(e, checked) => {
                      onChange(checked ? 1 : 0);
                    }}
                  />
                </>
              );
            }}
          />
        </div>
      </Box>
    </div>
  );
};

export default MarketingForm;
